name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

      #permissions:
  #  contents: read


jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        cabal: ["3.6"]
        ghc:   ["9.2.8"]
          #ghc:   ["9.2.8", "9.4.7", "9.6.3", "9.8.1"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    - name: Install dependencies
      run: |
        cabal install
        cabal update
        cabal build --only-dependencies --enable-tests --enable-benchmarks
    - name: Build
      run: cabal build --enable-tests --enable-benchmarks all
    - name: Run tests
      run: cabal test all

  format-and-lint:
    strategy:
      matrix:
        cabal: ["3.6"]
        ghc:   ["9.2.8"]
          #ghc:   ["9.2.8", "9.4.7", "9.6.3", "9.8.1"]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    - name: Install dependencies
      run: |
        cabal install
        cabal update
        cabal install hlint hindent
    - name: Fmt
      run: |
        hindent --validate **/*.hs
    - name: Lint
      run: |
        hlint **/*.hs --cross -q

  on-success:
    name: "Release"

    permissions: write-all
    runs-on: "ubuntu-latest"
    steps:
    - uses: actions/checkout@v3
    - uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    - name: Install dependencies
      run: |
        cabal install
        cabal update
    - name: Run
      run: cabal run reshume -- example/cv_en.tex example/conf.json
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: ${{ github.event_name == 'pull_request' }}
        title: "Development Build"
        files: |
          *.pdf

